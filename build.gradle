import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'net.minecraftforge.gradle'

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

version = mod_version
group = "com.github.logictechcorp"
archivesBaseName = "${mod_name}-${minecraft_version}"
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    mappings channel: "snapshot", version: "${mcp_version}"

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${project.name}.main"
            environment 'MOD_CLASSES', "NetherEx%%${project.file("build/resources/main").canonicalPath};NetherEx%%${project.file("/build/classes/java/main").canonicalPath};LibraryEx%%${project.file("LibraryEx/build/resources/main").canonicalPath};LibraryEx%%${project.file("LibraryEx/build/classes/java/main").canonicalPath}"
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${project.name}.main"
            environment 'MOD_CLASSES', "NetherEx%%${project.file("build/resources/main").canonicalPath};NetherEx%%${project.file("/build/classes/java/main").canonicalPath};LibraryEx%%${project.file("LibraryEx/build/resources/main").canonicalPath};LibraryEx%%${project.file("LibraryEx/build/classes/java/main").canonicalPath}"
        }
    }

    accessTransformer = file('src/main/resources/META-INF/netherex_at.cfg')
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compile project(':LibraryEx')
}

jar {
    exclude "**/*.bat"

    manifest {
        attributes([
                "Specification-Title": "${mod_name}",
                "Specification-Vendor": "LogicTechCorp",
                "Specification-Version": "${mod_version}",
                "Implementation-Title": "${mod_name}",
                "Implementation-Version": "${mod_version}",
                "Implementation-Vendor" :"LogicTechCorp",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLAT": "netherex_at.cfg"
        ])
    }
}

task processDevResources(type: Copy) {
    destinationDir = ((Copy)project.tasks.getByName("processResources")).getDestinationDir()
    from(sourceSets.main.resources.srcDirs) {
        filter tokens: ["file.jarVersion": project.version as String], beginToken: "\${", endToken: "}", ReplaceTokens
    }
}
